{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartBtn.addEventListener('click', onStartBtnClick);\n\nlet userSelectedDate = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        backgroundColor: '#ef4040',\n        iconUrl: '../img/bi_x-octagon.png',\n      });\n\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n    console.log(selectedDates);\n  },\n};\n\nconst datePicker = flatpickr(input, options);\n\nfunction onStartBtnClick() {\n  startBtn.disabled = true;\n  input.disabled = true;\n  const intervalId = setInterval(() => {\n    const timeRemaining = userSelectedDate - Date.now();\n    if (timeRemaining <= 1000) {\n      clearInterval(intervalId);\n      input.disabled = false;\n    }\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n"],"names":["startBtn","input","daysEl","hoursEl","minutesEl","secondsEl","onStartBtnClick","userSelectedDate","options","selectedDates","iziToast","flatpickr","intervalId","timeRemaining","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDL,EAAS,iBAAiB,QAASM,CAAe,EAElD,IAAIC,EAAmB,KAEvBP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,GAAoB,IAAI,MAC1BG,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCACT,gBAAiB,UACjB,QAAS,yBACjB,CAAO,EAEDV,EAAS,SAAW,IAEpBA,EAAS,SAAW,GAEtB,QAAQ,IAAIS,CAAa,CAC1B,CACH,EAEmBE,EAAUV,EAAOO,CAAO,EAE3C,SAASF,GAAkB,CACzBN,EAAS,SAAW,GACpBC,EAAM,SAAW,GACjB,MAAMW,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAgBN,EAAmB,KAAK,IAAG,EAC7CM,GAAiB,MACnB,cAAcD,CAAU,EACxBX,EAAM,SAAW,IAEnB,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EACjEX,EAAO,YAAciB,EAAeL,CAAI,EACxCX,EAAQ,YAAcgB,EAAeJ,CAAK,EAC1CX,EAAU,YAAce,EAAeH,CAAO,EAC9CX,EAAU,YAAcc,EAAeF,CAAO,CAC/C,EAAE,GAAI,CACT,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}